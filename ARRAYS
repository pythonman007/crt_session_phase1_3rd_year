Product of subarray except it self:
--------------------------------------------------------------------
Brute Force solution T.C :- O(N**2) 
nums = [1,2,3,4] 
n = len(nums) 
result = [] 
for i in range(0,n):
    product = 1 
    for j in range(0,n):
        if(i!=j):
            product=product*nums[j] 
    result.append(product)
print(result)
-------------------------------------------------------------------------------------
Better :- using divison operator
from typing import List
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        n = len(nums) 
        no_of_zeros = 0 
        prod = 1 
        for i in nums:
            if(i==0):
                no_of_zeros+=1 
            else:
                prod*=i 
        ans = [] 
        for i in nums:
            if(no_of_zeros>1):
                ans.append(0)
            else:
                if(no_of_zeros==1):
                    if(i==0):
                        ans.append(prod)
                    else:
                        ans.append(0)
                else:
                    ans.append(prod//i)
        return ans 
------------------------------------------------------------------------------------------------------
Optimal:- T.c:- O(N) s.c:-O(N)
from typing import List
class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        n = len(nums) 
        prod = 1 
        left = [0]*n  
        for i in range(0,n):
            prod=prod*nums[i]
            left[i]=prod 
        prod = 1 
        right = [0]*n 
        for i in range(n-1,-1,-1):
            prod=prod*nums[i]
            right[i]=prod 
        ans = [0]*n 
        ans[0]=right[1] 
        for i in range(1,n-1):
            ans[i]=left[i-1]*right[i+1] 
        ans[n-1]=left[n-2] 
        return ans 
---------------------------------------------------------
Pascal Triangle 
Given row and col print the val in that row and col
row = int(input())
col = int(input()) 
n = row-1 
r = col-1 
ans = 1 
for i in range(r):
    ans = ans*(n-i)
    ans = ans//(i+1)
print(ans)
---------------------------------------------------------
Pascal Triangle :- Give the row number print the values of the row.
def ncr(n,r):
    ans = 1 
    for i in range(r):
        ans = ans*(n-i)
        ans = ans//(i+1)
    return ans 
row = int(input())
result=[] 
for col in range(1,row+1):
    result.append(ncr(row-1,col-1))
print(result)
